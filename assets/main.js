/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/yma-core/dist/components/autofocus.js":
/*!************************************************************!*\
  !*** ./node_modules/yma-core/dist/components/autofocus.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function() {\r\n    return function(scope, elem) {\r\n      return elem.focus();\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=autofocus.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/autofocus.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/common.js":
/*!*********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/common.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    var getFormElement;\r\n    getFormElement = function(elem) {\r\n      var formElement, node;\r\n      node = elem;\r\n      while (node.parentNode && node.tagName !== 'FORM') {\r\n        node = node.parentNode;\r\n      }\r\n      if (node && node.tagName === 'FORM') {\r\n        formElement = app.$getElement(node).data;\r\n        if (typeof formElement === 'undefined') {\r\n          formElement[props.name] = {};\r\n          formElement = formElement[props.name];\r\n        }\r\n      }\r\n      return formElement;\r\n    };\r\n    return {\r\n      getFormElement: getFormElement,\r\n      addFormError: function(error, elem, props) {\r\n        var formElement;\r\n        formElement = getFormElement(elem);\r\n        formElement.$errors = formElement.$errors || {};\r\n        formElement.$errors[error] = formElement.$errors[error] || {};\r\n        formElement.$errors[error][props.name] = true;\r\n        formElement[props.name] = formElement[props.name] || {};\r\n        formElement[props.name].$errors = formElement[props.name].$errors || {};\r\n        return formElement[props.name].$errors[error] = true;\r\n      },\r\n      removeFormError: function(error, elem, props) {\r\n        var formElement, ref, ref1, ref2, ref3, ref4;\r\n        formElement = getFormElement(elem);\r\n        if ((ref = formElement[props.name].$errors) != null) {\r\n          delete ref[error];\r\n        }\r\n        if (!Object.keys(formElement[props.name].$errors != null).length) {\r\n          delete formElement[props.name].$errors;\r\n        }\r\n        if ((ref1 = formElement.$errors) != null) {\r\n          if ((ref2 = ref1[error]) != null) {\r\n            delete ref2[props.name];\r\n          }\r\n        }\r\n        if (!Object.keys(((ref3 = formElement.$errors) != null ? ref3[error] : void 0) != null).length) {\r\n          if ((ref4 = formElement.$errors) != null) {\r\n            delete ref4[error];\r\n          }\r\n        }\r\n        if (!Object.keys(formElement.$errors != null).length) {\r\n          return delete formElement.$errors;\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=common.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/common.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/controller.js":
/*!*************************************************************!*\
  !*** ./node_modules/yma-core/dist/components/controller.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    return {\r\n      pre: function(scope, elem, props) {\r\n        var ctrl;\r\n        ctrl = app.components[props.controller.toUpperCase()];\r\n        if (ctrl) {\r\n          ctrl.controller(scope);\r\n        }\r\n        return null;\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=controller.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/controller.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/fetch.js":
/*!********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/fetch.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    app.$preFetch = [];\r\n    app.$postFetch = [];\r\n    return {\r\n      $fetch: function(options) {\r\n        return new Promise(async function(resolve, reject) {\r\n          var e, fn, i, j, key, len, len1, mockService, ref, ref1, ref2, req, resolveData, response, value;\r\n          try {\r\n            ref = app.$preFetch;\r\n            for (i = 0, len = ref.length; i < len; i++) {\r\n              fn = ref[i];\r\n              await fn(options);\r\n            }\r\n            if (options.$preFetch) {\r\n              ref1 = options.$preFetch;\r\n              for (j = 0, len1 = ref1.length; j < len1; j++) {\r\n                fn = ref1[j];\r\n                await fn(options);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            e = error;\r\n            return reject(e);\r\n          }\r\n          options.method = options.method || 'GET';\r\n          req = new XMLHttpRequest();\r\n          if (options.headers) {\r\n            ref2 = options.headers;\r\n            for (key in ref2) {\r\n              value = ref2[key];\r\n              req.setRequestHeader(key, value);\r\n            }\r\n          }\r\n          req.setRequestHeader('Content-Type', 'application/x-www-form-urlencode');\r\n          if (mockService = app.$getSerivce('mocks')) {\r\n            if (response = (await mockService.$getResponse(req))) {\r\n              return resolveData(response);\r\n            }\r\n          }\r\n          resolveData = async function(response) {\r\n            var k, l, len2, len3, ref3, ref4;\r\n            try {\r\n              ref3 = app.$postFetch;\r\n              for (k = 0, len2 = ref3.length; k < len2; k++) {\r\n                fn = ref3[k];\r\n                await fn(response);\r\n              }\r\n              if (options.$postFetch) {\r\n                ref4 = options.$postFetch;\r\n                for (l = 0, len3 = ref4.length; l < len3; l++) {\r\n                  fn = ref4[l];\r\n                  await fn(response);\r\n                }\r\n              }\r\n            } catch (error) {\r\n              e = error;\r\n              return reject(e);\r\n            }\r\n            return resolve(response);\r\n          };\r\n          req.open(options.url, options.method, true);\r\n          req.onreadystatechange = function() {\r\n            if (this.readyState === 4) {\r\n              return resolveData(this);\r\n            }\r\n          };\r\n          return req.send(options.data);\r\n        });\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=fetch.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/fetch.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/form.js":
/*!*******************************************************!*\
  !*** ./node_modules/yma-core/dist/components/form.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    var count;\r\n    count = 0;\r\n    return {\r\n      controller: function(scope, elem, props) {\r\n        var myvar, submit;\r\n        if (props.name) {\r\n          if (props.name) {\r\n            myvar = {};\r\n            app.$setScopeVar(props.name, myvar, scope.$parent);\r\n            app.$setScopeVar(props.name, myvar, scope);\r\n            myvar = app.$getScopeVar(props.name, scope);\r\n            if (props.submit) {\r\n              submit = function(event) {\r\n                scope.$event = event;\r\n                app.$eval(props.submit, scope);\r\n                event.preventDefault = true;\r\n                return false;\r\n              };\r\n              add.$addEventListener('submit', submit);\r\n            }\r\n          }\r\n          return myvar;\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=form.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/form.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/go.js":
/*!*****************************************************!*\
  !*** ./node_modules/yma-core/dist/components/go.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function() {\r\n    return function(scope, elem, props) {\r\n      var listener, scene;\r\n      scope.$use('router');\r\n      scene = scope.router.parsePath(props.go);\r\n      listener = function(event) {\r\n        return scope.router.go(scene.name, scene.data);\r\n      };\r\n      return scope.$addEventListeners(elem, 'mousedown', listener);\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=go.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/go.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/hide.js":
/*!*******************************************************!*\
  !*** ./node_modules/yma-core/dist/components/hide.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    app.$appendStyles('.yma-hidden {display:none}');\r\n    return function(scope, elem, props) {\r\n      if (props.hide && app.$eval(props.hide, scope)) {\r\n        return app.$addClass(elem, 'yma-hidden');\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=hide.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/hide.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/if.js":
/*!*****************************************************!*\
  !*** ./node_modules/yma-core/dist/components/if.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    return {\r\n      pre: function(scope, elem, props) {\r\n        if (props[\"if\"] && app.$eval(props[\"if\"], scope)) {\r\n          return [scope];\r\n        } else {\r\n          return [];\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=if.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/if.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/mocks.js":
/*!********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/mocks.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    return function(options) {\r\n      return console.log('mocks');\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=mocks.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/mocks.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/model.js":
/*!********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/model.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    var getFormElement;\r\n    ({getFormElement} = __webpack_require__(/*! ./common */ \"./node_modules/yma-core/dist/components/common.js\")(app));\r\n    return function(scope, elem, props) {\r\n      var formElement, setValue, updateModel;\r\n      formElement = getFormElement(elem);\r\n      setValue = async function() {\r\n        var i, len, ref, results, validator, value;\r\n        if (elem.value !== app.$eval(props.model)) {\r\n          value = app.$getScopeVar(props.model, scope);\r\n          if (typeof value !== 'undefined') {\r\n            elem.value = value;\r\n          }\r\n          if (formElement) {\r\n            formElement[props.name] = formElement[props.name] || {};\r\n            if (typeof value !== 'undefined') {\r\n              formElement[props.name].$value = elem.value;\r\n            }\r\n            if (formElement[props.name].$validators) {\r\n              ref = formElement[props.name].$validators;\r\n              results = [];\r\n              for (i = 0, len = ref.length; i < len; i++) {\r\n                validator = ref[i];\r\n                results.push((await validator(elem.value)));\r\n              }\r\n              return results;\r\n            }\r\n          }\r\n        }\r\n      };\r\n      setValue();\r\n      updateModel = async function(event) {\r\n        var i, len, ref, updateData, validator;\r\n        if (formElement != null ? formElement[props.name].$validators : void 0) {\r\n          ref = formElement[props.name].$validators;\r\n          for (i = 0, len = ref.length; i < len; i++) {\r\n            validator = ref[i];\r\n            await validator(elem.value);\r\n          }\r\n        }\r\n        if (typeof value !== 'undefined') {\r\n          if (formElement != null) {\r\n            formElement[props.name].$value = elem.value;\r\n          }\r\n        }\r\n        updateData = {};\r\n        updateData[props.model] = elem.value;\r\n        return scope.$update(updateData);\r\n      };\r\n      scope.$addEventListeners(elem, ['keyup', 'change', 'paste'], updateModel);\r\n      return scope.$on('update', setValue);\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=model.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/model.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/press.js":
/*!********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/press.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    return function(scope, elem, props) {\r\n      var listener;\r\n      if (/\\(/.test(props.press)) {\r\n        listener = function(event) {\r\n          scope.$event = event;\r\n          app.$eval(props.press, scope);\r\n          return delete scope.$event;\r\n        };\r\n      } else {\r\n        listener = app.$eval(props.press, scope);\r\n      }\r\n      if (typeof listener === 'function') {\r\n        return scope.$addEventListeners(elem, ['click'], listener);\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=press.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/press.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/repeat.js":
/*!*********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/repeat.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    var hashes;\r\n    hashes = [];\r\n    return {\r\n      pre: function(scope, elem, props) {\r\n        var arr, itemName, myrepeat, repeat, results;\r\n        itemName = '$item';\r\n        repeat = props.repeat;\r\n        myrepeat = repeat.replace(/\\sas\\s([\\w_]+)$/, function(all, name) {\r\n          itemName = name;\r\n          return '';\r\n        });\r\n        arr = app.$eval(myrepeat, scope);\r\n        if (arr) {\r\n          results = arr.map(function(item, i) {\r\n            var hash, hashIndex, newscope;\r\n            hash = app.$hash(JSON.stringify(item));\r\n            hashIndex = hashes.indexOf(hash);\r\n            newscope = app.Scope(scope);\r\n            newscope[itemName] = item;\r\n            newscope.$index = i;\r\n            newscope.$first = i === 0;\r\n            newscope.$last = i === arr.length - 1;\r\n            newscope.$fresh = hashIndex === -1;\r\n            newscope.$moveUp = hashIndex > i;\r\n            newscope.$moveDown = hashIndex !== -1 && hashIndex < i;\r\n            newscope.$lastIndex = hashIndex;\r\n            newscope.$dataHash = app.$hash(JSON.stringify(app.$hashObject(item)));\r\n            return newscope;\r\n          });\r\n          if (scope.$phase === 'render') {\r\n            hashes = results.map(function(scope) {\r\n              return app.$hash(JSON.stringify(scope[itemName]));\r\n            });\r\n          }\r\n          return results;\r\n        } else {\r\n          return [];\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=repeat.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/repeat.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/required.js":
/*!***********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/required.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  var addFormError, getFormElement, removeFormError;\r\n\r\n  ({getFormElement, addFormError, removeFormError} = __webpack_require__(/*! ./common */ \"./node_modules/yma-core/dist/components/common.js\"));\r\n\r\n  module.exports = function(app) {\r\n    return {\r\n      pre: function(scope, elem, props) {\r\n        var doValidate, formElement;\r\n        formElement = getFormElement(elem);\r\n        formElement[props.name] = formElement[props.name] || {};\r\n        formElement[props.name].$validators = formElement[props.name].$validators || [];\r\n        doValidate = function() {\r\n          if (app.$eval(props.required)) {\r\n            if (formElement[props.name].$value && formElement[props.name].$value !== 0) {\r\n              return removeFormError('required', elem, props);\r\n            } else {\r\n              return addFormError('required', elem, props);\r\n            }\r\n          }\r\n        };\r\n        formElement[props.name].$validators.push(doValidate);\r\n        return doValidate();\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=required.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/required.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/router.js":
/*!*********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/router.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    var callbacks, checkScenePath, go, parsePath, routerScope, scenes;\r\n    app.$appendStyles('.yma-router-parked {display:none}');\r\n    callbacks = app.Callbacks();\r\n    scenes = {};\r\n    routerScope = null;\r\n    checkScenePath = function(pathname, route) {\r\n      var data, i, j, len, m, match, params, reg, regex;\r\n      params = [];\r\n      reg = route.replace(/:(\\w+)/g, function(all, param) {\r\n        params.push(param);\r\n        return '([^/]+)';\r\n      });\r\n      regex = new RegExp('^' + reg + '$');\r\n      data = {};\r\n      if (m = pathname.match(regex)) {\r\n        for (i = j = 0, len = m.length; j < len; i = ++j) {\r\n          match = m[i];\r\n          if (i === 0) {\r\n            continue;\r\n          }\r\n          data[params[i - 1]] = match;\r\n        }\r\n        return data;\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n    parsePath = function(pathname) {\r\n      var data, name, scene;\r\n      for (name in scenes) {\r\n        scene = scenes[name];\r\n        if (data = checkScenePath(pathname, scene.route)) {\r\n          return {\r\n            name: scene.scene,\r\n            data: data\r\n          };\r\n        }\r\n      }\r\n    };\r\n    go = function(name, data) {\r\n      routerScope.$scene = {\r\n        scene: name,\r\n        data: data\r\n      };\r\n      return routerScope.$update();\r\n    };\r\n    return {\r\n      controller: function(scope, elem, props) {\r\n        routerScope = scope;\r\n        scope.$scene = null;\r\n        return app.$once('rendered', function() {\r\n          scope.$scene = parsePath(window.location.pathname);\r\n          return scope.$update();\r\n        });\r\n      },\r\n      service: function() {\r\n        return {\r\n          go: go,\r\n          $on: callbacks.$on,\r\n          parsePath: parsePath,\r\n          addScene: function(scene) {\r\n            return scenes[scene.scene] = scene;\r\n          }\r\n        };\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=router.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/router.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/components/scene.js":
/*!********************************************************!*\
  !*** ./node_modules/yma-core/dist/components/scene.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = function(app) {\r\n    return {\r\n      pre: function(scope, elem, props) {\r\n        var ref;\r\n        scope.$use('router');\r\n        scope.router.addScene(props);\r\n        if (props.scene !== ((ref = scope.$scene) != null ? ref.name : void 0)) {\r\n          return [];\r\n        }\r\n        return null;\r\n      }\r\n    };\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=scene.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/components/scene.js?");

/***/ }),

/***/ "./node_modules/yma-core/dist/index.js":
/*!*********************************************!*\
  !*** ./node_modules/yma-core/dist/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  module.exports = {\r\n    go: __webpack_require__(/*! ./components/go */ \"./node_modules/yma-core/dist/components/go.js\"),\r\n    hide: __webpack_require__(/*! ./components/hide */ \"./node_modules/yma-core/dist/components/hide.js\"),\r\n    \"if\": __webpack_require__(/*! ./components/if */ \"./node_modules/yma-core/dist/components/if.js\"),\r\n    press: __webpack_require__(/*! ./components/press */ \"./node_modules/yma-core/dist/components/press.js\"),\r\n    repeat: __webpack_require__(/*! ./components/repeat */ \"./node_modules/yma-core/dist/components/repeat.js\"),\r\n    controller: __webpack_require__(/*! ./components/controller */ \"./node_modules/yma-core/dist/components/controller.js\"),\r\n    router: __webpack_require__(/*! ./components/router */ \"./node_modules/yma-core/dist/components/router.js\"),\r\n    scene: __webpack_require__(/*! ./components/scene */ \"./node_modules/yma-core/dist/components/scene.js\"),\r\n    model: __webpack_require__(/*! ./components/model */ \"./node_modules/yma-core/dist/components/model.js\"),\r\n    autofocus: __webpack_require__(/*! ./components/autofocus */ \"./node_modules/yma-core/dist/components/autofocus.js\"),\r\n    form: __webpack_require__(/*! ./components/form */ \"./node_modules/yma-core/dist/components/form.js\"),\r\n    required: __webpack_require__(/*! ./components/required */ \"./node_modules/yma-core/dist/components/required.js\"),\r\n    fetch: __webpack_require__(/*! ./components/fetch */ \"./node_modules/yma-core/dist/components/fetch.js\"),\r\n    mocks: __webpack_require__(/*! ./components/mocks */ \"./node_modules/yma-core/dist/components/mocks.js\")\r\n  };\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=index.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma-core/dist/index.js?");

/***/ }),

/***/ "./node_modules/yma/dist/index.js":
/*!****************************************!*\
  !*** ./node_modules/yma/dist/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 2.5.1\r\n(function() {\r\n  var Callbacks, Environment, Yma, hash, hashObject, ogid;\r\n\r\n  ogid = function(radix, rnd) {\r\n    return parseInt((new Date().valueOf() - new Date(2020, 0, 1).valueOf()).toString().concat(Math.floor(Math.random() * (9999999 || false))).split('').reverse().join('')).toString(radix || 36);\r\n  };\r\n\r\n  hash = function(str) {\r\n    var h, i;\r\n    if (typeof str === 'undefined') {\r\n      return 0;\r\n    }\r\n    h = 5381;\r\n    i = str.length;\r\n    while (i) {\r\n      h = (h * 33) ^ str.charCodeAt(--i);\r\n    }\r\n    return h;\r\n  };\r\n\r\n  hashObject = function(obj) {\r\n    var hashed, key, val;\r\n    hashed = {};\r\n    for (key in obj) {\r\n      val = obj[key];\r\n      if (/^\\$/.test(key)) {\r\n        continue;\r\n      }\r\n      hashed[key] = hash(JSON.stringify(val));\r\n    }\r\n    return hashed;\r\n  };\r\n\r\n  Callbacks = function() {\r\n    var callbacks, toRemove;\r\n    callbacks = {};\r\n    toRemove = [];\r\n    return {\r\n      $on: function(name, fn) {\r\n        callbacks[name] = callbacks[name] || [];\r\n        return callbacks[name].push(fn);\r\n      },\r\n      $once: function(name, fn) {\r\n        var onceFn;\r\n        callbacks[name] = callbacks[name] || [];\r\n        onceFn = async function(data) {\r\n          var output;\r\n          output = (await fn(data));\r\n          toRemove.push(onceFn);\r\n          return output;\r\n        };\r\n        return callbacks[name].push(onceFn);\r\n      },\r\n      $off: function(name, fn) {\r\n        callbacks[name] = callbacks[name] || [];\r\n        return callbacks[name].splice(callbacks[name].indexOf(fn), 1);\r\n      },\r\n      $call: async function(name, data) {\r\n        var fn, j, k, len, len1, ref, results;\r\n        if (callbacks[name]) {\r\n          ref = callbacks[name];\r\n          for (j = 0, len = ref.length; j < len; j++) {\r\n            fn = ref[j];\r\n            await fn(data);\r\n          }\r\n        }\r\n        results = [];\r\n        for (k = 0, len1 = toRemove.length; k < len1; k++) {\r\n          fn = toRemove[k];\r\n          if (callbacks[name]) {\r\n            callbacks[name].splice(callbacks[name].indexOf(fn), 1);\r\n            results.push(toRemove.splice(toRemove.indexOf(fn), 1));\r\n          } else {\r\n            results.push(void 0);\r\n          }\r\n        }\r\n        return results;\r\n      }\r\n    };\r\n  };\r\n\r\n  Environment = function() {\r\n    var browser, mobile, ua;\r\n    //from headjs\r\n    ua = navigator.userAgent.toLowerCase();\r\n    mobile = /mobile|android|kindle|silk|midp|phone|(windows .+arm|touch)/.test(ua);\r\n    ua = /(chrome|firefox)[ \\/]([\\w.]+)/.exec(ua) || /(iphone|ipad|ipod)(?:.*version)?[ \\/]([\\w.]+)/.exec(ua) || /(android)(?:.*version)?[ \\/]([\\w.]+)/.exec(ua) || /(webkit|opera)(?:.*version)?[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || /(trident).+rv:(\\w.)+/.exec(ua) || [];\r\n    browser = ua[1];\r\n    switch (browser) {\r\n      case 'msie':\r\n      case 'trident':\r\n        'ie';\r\n        break;\r\n      case 'ipod':\r\n      case 'ipad':\r\n      case 'iphone':\r\n        'ios';\r\n        break;\r\n      case 'webkit':\r\n        'safari';\r\n    }\r\n    return {\r\n      mobile: mobile,\r\n      browser: browser,\r\n      version: ua[2]\r\n    };\r\n  };\r\n\r\n  Yma = function(appName) {\r\n    var Scope, bootstrapped, callbacks, checkAttrs, checkForChanges, cleanupScopes, components, elements, environment, evalInContext, fillTemplate, fillVars, findScopeElement, getElement, getProps, getScopeVar, getScopeVarRoot, getService, makeId, mergeScopes, offset, preRender, preRenderChildren, render, renderChildren, rootElem, scopeVar, scopes, services, setScopeVar, teardown, teardownChildren, updateScopes;\r\n    rootElem = null;\r\n    components = {};\r\n    elements = [];\r\n    scopes = {};\r\n    services = {};\r\n    environment = Environment();\r\n    callbacks = Callbacks();\r\n    bootstrapped = false;\r\n    makeId = function(node, root) {\r\n      var id, mynode;\r\n      root = root || rootElem;\r\n      if (node === root) {\r\n        return 'root';\r\n      }\r\n      id = '';\r\n      while (node && node !== root) {\r\n        id += node.tagName + ':';\r\n        mynode = node;\r\n        while (mynode.previousSibling) {\r\n          id += mynode.tagName + '@';\r\n          mynode = mynode.previousSibling;\r\n        }\r\n        node = node.parentNode;\r\n      }\r\n      return id;\r\n    };\r\n    evalInContext = function(str, context) {\r\n      try {\r\n        return (new Function(`with(this) {return ${str}}`)).call(context);\r\n      } catch (error) {}\r\n    };\r\n    offset = function(node) {\r\n      var nodeOffset;\r\n      nodeOffset = {\r\n        x: 0,\r\n        y: 0,\r\n        w: node.offsetWidth,\r\n        h: node.offsetHeight\r\n      };\r\n      while (node.parentNode) {\r\n        nodeOffset.x += node.offsetLeft;\r\n        nodeOffset.y += node.offsetTop;\r\n        node = node.parentNode;\r\n      }\r\n      return nodeOffset;\r\n    };\r\n    fillTemplate = function(template, scope) {\r\n      return template.replace(/\\{\\{(.+?)\\}\\}/g, function(all, expression) {\r\n        var result;\r\n        if (typeof (result = evalInContext(expression, scope)) === 'undefined') {\r\n          return '';\r\n        } else {\r\n          return result;\r\n        }\r\n      });\r\n    };\r\n    mergeScopes = function(scope, merge, protectedFields) {\r\n      var key, results, val;\r\n      protectedFields = protectedFields || [];\r\n      results = [];\r\n      for (key in merge) {\r\n        val = merge[key];\r\n        if (!protectedFields.includes(key)) {\r\n          results.push(scope[key] = val);\r\n        } else {\r\n          results.push(void 0);\r\n        }\r\n      }\r\n      return results;\r\n    };\r\n    cleanupScopes = async function() {\r\n      var id, ref, ref1, results, scope, scopeElems;\r\n      results = [];\r\n      for (id in scopes) {\r\n        scope = scopes[id];\r\n        scopeElems = elements.filter(function(element) {\r\n          return element.scope === id;\r\n        });\r\n        if (scopeElems.length === 0) {\r\n          if ((ref = scope.$parent) != null) {\r\n            ref.$children.splice((ref1 = scope.$parent) != null ? ref1.$children.indexOf(id) : void 0, 1);\r\n          }\r\n          await scope.$call('teardown');\r\n          //remove scope from any services\r\n          results.push(delete scopes[scope.$id]);\r\n        } else {\r\n          results.push(void 0);\r\n        }\r\n      }\r\n      return results;\r\n    };\r\n    teardown = async function(id) {\r\n      var r;\r\n      r = new RegExp(id + '$');\r\n      elements = elements.filter(function(element) {\r\n        return !r.test(element.id);\r\n      });\r\n      return (await cleanupScopes());\r\n    };\r\n    teardownChildren = async function(id) {\r\n      var r;\r\n      r = new RegExp('.+' + id + '$');\r\n      elements = elements.filter(function(element) {\r\n        return !r.test(element.id);\r\n      });\r\n      return (await cleanupScopes());\r\n    };\r\n    findScopeElement = function(element, scope) {\r\n      var child, j, len, myelement, ref;\r\n      if (element.$scope.$id === scope.$id) {\r\n        return element;\r\n      }\r\n      ref = element.$children;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        child = ref[j];\r\n        if (myelement = findScopeElement(child, scope)) {\r\n          return myelement;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n    checkForChanges = function(element) {\r\n      var attr, attrComponent, child, clone, i, j, k, len, len1, myscopes, ref, ref1, testRoot;\r\n      //render element html taking into account pre stuff\r\n      testRoot = document.createElement('div');\r\n      testRoot.innerHTML = element.$html;\r\n      ref = testRoot.children;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        child = ref[j];\r\n        if (!child) {\r\n          return element;\r\n        }\r\n        ref1 = child.getAttributeNames().map(function(name) {\r\n          return {\r\n            name: name,\r\n            value: child.getAttribute(name)\r\n          };\r\n        });\r\n        for (k = 0, len1 = ref1.length; k < len1; k++) {\r\n          attr = ref1[k];\r\n          if (attrComponent = components[attr.name.toUpperCase()]) {\r\n            element.$scope.$phase = 'prerender';\r\n            if (typeof attrComponent.pre === 'function') {\r\n              myscopes = attrComponent.pre(element.$scope, child, getProps(child, element.$scope));\r\n            }\r\n            if (myscopes && typeof myscopes === 'object' && typeof myscopes.length !== 'undefined') {\r\n              //child.removeAttribute attr.name\r\n              i = myscopes.length;\r\n              while (i-- > 0) {\r\n                clone = child.cloneNode();\r\n                clone.innerHTML = child.innerHTML;\r\n                child.parentNode.insertBefore(clone, child.nextSibling);\r\n              }\r\n              if (child.children.length !== element.$children.length) {\r\n                return element;\r\n              }\r\n              child.parentNode.removeChild(child);\r\n            }\r\n            child.setAttribute('checkattrs', true);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    updateScopes = function(updatedScopes) {\r\n      var changes, child, children, doTeardown, element, i, index, j, k, l, len, len1, len2, ref, resetElement, updatedScope;\r\n      index = 0;\r\n      while (updatedScopes.length > index + 1) {\r\n        i = updatedScopes.length;\r\n        while (i-- > index) {\r\n          if (updatedScopes[i]) {\r\n            if (updatedScopes[i].$isDescendantOf(updatedScopes[0])) {\r\n              updatedScopes.splice(i, 1);\r\n              continue;\r\n            }\r\n            if (updatedScopes[i].$isAncestorOf(updatedScopes[0])) {\r\n              updatedScopes[0] = updatedScopes[i];\r\n              updatedScopes.splice(i, 1);\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        index++;\r\n      }\r\n      for (j = 0, len = updatedScopes.length; j < len; j++) {\r\n        updatedScope = updatedScopes[j];\r\n        element = findScopeElement(rootElem, updatedScope); //could there be more than one?\r\n        changes = checkForChanges(element);\r\n        console.log('updated scope', updatedScope);\r\n        console.log('changes', changes);\r\n        if (changes) {\r\n          doTeardown = function(element, skip) {\r\n            var child, k, len1, ref;\r\n            if (!skip) {\r\n              element.$scope.$call('teardown');\r\n            }\r\n            ref = element.$children;\r\n            for (k = 0, len1 = ref.length; k < len1; k++) {\r\n              child = ref[k];\r\n              doTeardown;\r\n            }\r\n            return null;\r\n          };\r\n          doTeardown(changes, true);\r\n          changes.$children = [];\r\n          changes.$node.innerHTML = changes.$html;\r\n          children = [];\r\n          ref = changes.$node.children;\r\n          for (k = 0, len1 = ref.length; k < len1; k++) {\r\n            child = ref[k];\r\n            children.push(child);\r\n          }\r\n          for (l = 0, len2 = children.length; l < len2; l++) {\r\n            child = children[l];\r\n            render(child, changes);\r\n          }\r\n        }\r\n        //get root element for this scope\r\n        //try prebuilding this element\r\n        //if there are structural changes then fully rerender element\r\n        //reset vars for this element\r\n        resetElement = function(element) {\r\n          var attr, len3, len4, len5, m, n, node, o, ref1, ref2, ref3, results, t;\r\n          t = 0;\r\n          ref1 = element.$node.childNodes;\r\n          for (m = 0, len3 = ref1.length; m < len3; m++) {\r\n            node = ref1[m];\r\n            if (node.nodeType === document.TEXT_NODE) {\r\n              node.replaceWith(element.$textNodes[t++] || '');\r\n            }\r\n          }\r\n          ref2 = element.$attributes;\r\n          for (n = 0, len4 = ref2.length; n < len4; n++) {\r\n            attr = ref2[n];\r\n            if (element.$node.hasAttributes(attr.name)) {\r\n              element.$node.setAttribute(attr.name, attr.value);\r\n            }\r\n          }\r\n          ref3 = element.$children;\r\n          results = [];\r\n          for (o = 0, len5 = ref3.length; o < len5; o++) {\r\n            child = ref3[o];\r\n            results.push(resetElement(child));\r\n          }\r\n          return results;\r\n        };\r\n        resetElement(element);\r\n        fillVars(element);\r\n        checkAttrs(element);\r\n        callbacks.$call('updated');\r\n      }\r\n    };\r\n    scopeVar = function(op, path, value, scope) {\r\n      var arr, field, i, inside, j, k, lastIndex, lastPoint, len, len1, letter, level, lookingFor, myvar, ref, ref1, ref2, ref3, sp, splitPoints;\r\n      myvar = evalInContext(path, scope);\r\n      arr = [];\r\n      splitPoints = [];\r\n      inside = null;\r\n      lookingFor = null;\r\n      level = 0;\r\n      ref = path.split('');\r\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\r\n        letter = ref[i];\r\n        if (inside) {\r\n          if (letter === lookingFor) {\r\n            level--;\r\n            if (level === 0) {\r\n              Object.assign(splitPoints[splitPoints.length - 1], {\r\n                endIndex: i,\r\n                endPath: path.substr(0, i + 1)\r\n              });\r\n              inside = null;\r\n              lookingFor = null;\r\n            }\r\n          } else if (letter === inside) {\r\n            level++;\r\n          }\r\n        } else {\r\n          if (letter === '[') {\r\n            level++;\r\n            inside = '[';\r\n            lookingFor = ']';\r\n            splitPoints.push({\r\n              type: inside + lookingFor,\r\n              index: i,\r\n              path: path.substr(0, i)\r\n            });\r\n          } else if (letter === '(') {\r\n            level++;\r\n            inside = '(';\r\n            lookingFor = ')';\r\n            splitPoints.push({\r\n              type: inside + lookingFor,\r\n              index: i,\r\n              path: path.substr(0, i)\r\n            });\r\n          } else if (letter === '.') {\r\n            splitPoints.push({\r\n              type: 'object',\r\n              index: i,\r\n              path: path.substr(0, i)\r\n            });\r\n          }\r\n        }\r\n      }\r\n      myvar = null;\r\n      for (k = 0, len1 = splitPoints.length; k < len1; k++) {\r\n        sp = splitPoints[k];\r\n        if (sp.type === 'object') {\r\n          myvar = evalInContext(sp.path, scope);\r\n          if (typeof myvar === 'undefined') {\r\n            myvar = evalInContext('this.' + sp.path + '={}', scope);\r\n          }\r\n        }\r\n        if (sp.type === '[]') {\r\n          myvar = evalInContext(sp.path, scope);\r\n          if (typeof myvar === 'undefined') {\r\n            myvar = evalInContext('this.' + sp.path + '=[]', scope);\r\n            myvar = evalInContext(sp.endPath + '={}', scope);\r\n          }\r\n        }\r\n      }\r\n      if (op === 'rootName') {\r\n        return ((ref1 = splitPoints[0]) != null ? ref1.path : void 0) || path;\r\n      }\r\n      if (op === 'root') {\r\n        return evalInContext(((ref2 = splitPoints[0]) != null ? ref2.path : void 0) || path, scope);\r\n      }\r\n      lastPoint = splitPoints[splitPoints.length - 1];\r\n      lastIndex = lastPoint ? (lastPoint.lastIndex || lastPoint.index) + 1 : 0;\r\n      if (((ref3 = splitPoints[splitPoints.length - 1]) != null ? ref3.type : void 0) === '[]') {\r\n        field = evalInContext(path.substr(lastIndex).replace(/\\]$/, ''), scope);\r\n      } else {\r\n        if (lastIndex) {\r\n          field = path.substr(lastIndex);\r\n        } else {\r\n          field = path;\r\n        }\r\n      }\r\n      if (op === 'get') {\r\n        return (myvar || scope)[field];\r\n      } else {\r\n        (myvar || scope)[field] = value;\r\n      }\r\n      return value;\r\n    };\r\n    setScopeVar = function(path, value, scope) {\r\n      return scopeVar('set', path, value, scope);\r\n    };\r\n    getScopeVar = function(path, scope) {\r\n      return scopeVar('get', path, null, scope);\r\n    };\r\n    getScopeVarRoot = function(path, scope) {\r\n      return scopeVar('root', path, null, scope);\r\n    };\r\n    Scope = function(parentScope) {\r\n      var intervals, newscope, scopeCallbacks, timeouts;\r\n      scopeCallbacks = Callbacks();\r\n      timeouts = [];\r\n      intervals = [];\r\n      newscope = {\r\n        $id: ogid(),\r\n        $children: [],\r\n        $parent: null,\r\n        $environment: environment,\r\n        $update: async function(updates, hard) {\r\n          var j, key, len, myscope, propagateForwards, rootName, scope, updatedScopes, val;\r\n          propagateForwards = function(myscope, rootName, value) {\r\n            var propagate;\r\n            propagate = function(childScope) {\r\n              var child, j, len, ref;\r\n              childScope[rootName] = val;\r\n              ref = childScope.$children;\r\n              for (j = 0, len = ref.length; j < len; j++) {\r\n                child = ref[j];\r\n                propagate(child);\r\n              }\r\n              return null;\r\n            };\r\n            return propagate(myscope);\r\n          };\r\n          for (key in updates) {\r\n            val = updates[key];\r\n            rootName = scopeVar('rootName', key, null, this);\r\n            setScopeVar(key, val, this);\r\n            val = this[rootName];\r\n            myscope = this;\r\n            while (myscope && myscope.$parent) {\r\n              if (myscope.$hash[rootName] && myscope.$hash[rootName] !== myscope.$parent.$hash[rootName]) {\r\n                myscope[rootName] = val;\r\n                propagateForwards(myscope, rootName, val);\r\n                break;\r\n              }\r\n              myscope = myscope.$parent;\r\n            }\r\n          }\r\n          updatedScopes = Object.values(scopes).filter(function(scope) {\r\n            return JSON.stringify(scope.$hash) !== JSON.stringify(hashObject(scope));\r\n          });\r\n          for (j = 0, len = updatedScopes.length; j < len; j++) {\r\n            scope = updatedScopes[j];\r\n            scope.$hash = hashObject(scope);\r\n          }\r\n          await updateScopes(updatedScopes);\r\n          return callbacks.$call('updated');\r\n        },\r\n        $use: function(name) {\r\n          var component, service;\r\n          if (service = services[name]) {\r\n            this[name] = service.fn;\r\n            service.scopes.push(this);\r\n          } else if (component = components[name.toUpperCase()]) {\r\n            services[name] = {\r\n              fn: (component.service || component)(),\r\n              scopes: [this]\r\n            };\r\n            this[name] = services[name].fn;\r\n          }\r\n          return this.$on('teardown', function() {\r\n            return services[name].scopes.splice(services[name].scopes.indexOf(this), 1);\r\n          });\r\n        },\r\n        $on: scopeCallbacks.$on,\r\n        $once: scopeCallbacks.$once,\r\n        $off: scopeCallbacks.$off,\r\n        $call: scopeCallbacks.$call,\r\n        $callChildren: async function(name, data) {\r\n          var childScope, j, len, ref;\r\n          await scopeCallbacks.$call(name, data);\r\n          ref = this.$children;\r\n          for (j = 0, len = ref.length; j < len; j++) {\r\n            childScope = ref[j];\r\n            if (childScope) { //check this\r\n              await childScope.$callChildren(name, data);\r\n            }\r\n          }\r\n          return null;\r\n        },\r\n        $isDescendantOf: function(scope) {\r\n          var myscope;\r\n          if (scope.$id === this.$id) {\r\n            return false;\r\n          }\r\n          myscope = this;\r\n          while (myscope.$parent) {\r\n            if (myscope.$id === scope.$id) {\r\n              return true;\r\n            }\r\n            myscope = myscope.$parent;\r\n          }\r\n          return false;\r\n        },\r\n        $isAncestorOf: function(scope) {\r\n          var check;\r\n          if (scope.$id === this.$id) {\r\n            return false;\r\n          }\r\n          check = function(myscope) {\r\n            var childScope, j, len, ref;\r\n            if (myscope.$id === scope.$id) {\r\n              return true;\r\n            }\r\n            ref = myscope.$children;\r\n            for (j = 0, len = ref.length; j < len; j++) {\r\n              childScope = ref[j];\r\n              if (check(childScope)) {\r\n                return true;\r\n              }\r\n            }\r\n            return false;\r\n          };\r\n          return check(scope);\r\n        },\r\n        $offset: offset,\r\n        $timeout: function(fn, delay) {\r\n          if (timeouts.length === 0) {\r\n            scopeCallbacks.$on('teardown', function() {\r\n              var j, len, results, timeout;\r\n              results = [];\r\n              for (j = 0, len = timeouts.length; j < len; j++) {\r\n                timeout = timeouts[j];\r\n                results.push(window.clearTimeout(timeout));\r\n              }\r\n              return results;\r\n            });\r\n          }\r\n          return timeouts.push(window.setTimeout(fn, delay));\r\n        },\r\n        $interval: function(fn, delay) {\r\n          if (intervals.length === 0) {\r\n            scopeCallbacks.$on('teardown', function() {\r\n              var interval, j, len, results;\r\n              results = [];\r\n              for (j = 0, len = intervals.length; j < len; j++) {\r\n                interval = intervals[j];\r\n                results.push(window.clearTimeout(interval));\r\n              }\r\n              return results;\r\n            });\r\n          }\r\n          return intervals.push(window.setInterval(fn, delay));\r\n        },\r\n        $addEventListeners: function(elem, listeners, fn) {\r\n          var j, len, listener;\r\n          if (typeof listeners === 'string') {\r\n            listeners = [listeners];\r\n          }\r\n          for (j = 0, len = listeners.length; j < len; j++) {\r\n            listener = listeners[j];\r\n            elem.addEventListener(listener, fn);\r\n          }\r\n          return this.$on('teardown', function() {\r\n            var k, len1, results;\r\n            results = [];\r\n            for (k = 0, len1 = listeners.length; k < len1; k++) {\r\n              listener = listeners[k];\r\n              results.push(elem.removeEventListener(listener, fn));\r\n            }\r\n            return results;\r\n          });\r\n        }\r\n      };\r\n      if (parentScope && parentScope.$id) {\r\n        parentScope.$children.push(newscope);\r\n        newscope.$parent = parentScope;\r\n      }\r\n      mergeScopes(newscope, parentScope, Object.keys(newscope));\r\n      scopes[newscope.$id] = newscope;\r\n      newscope.$hash = hashObject(newscope);\r\n      return newscope;\r\n    };\r\n    getElement = function(elem) {\r\n      var id;\r\n      id = makeId(elem);\r\n      return elements.filter(function(element) {\r\n        return element.id === id;\r\n      })[0];\r\n    };\r\n    getProps = function(elem, scope) {\r\n      var myattrs;\r\n      myattrs = {};\r\n      elem.getAttributeNames().forEach(function(name) {\r\n        return myattrs[name] = scope ? fillTemplate(elem.getAttribute(name), scope) : elem.getAttribute(name);\r\n      });\r\n      return myattrs;\r\n    };\r\n    renderChildren = function(node, parent) {\r\n      var child, children, j, k, len, len1, ref, results;\r\n      //return if /\\byma-router-parked\\b/.test elem.className\r\n      children = [];\r\n      ref = node.children;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        child = ref[j];\r\n        children.push(child);\r\n      }\r\n      results = [];\r\n      for (k = 0, len1 = children.length; k < len1; k++) {\r\n        child = children[k];\r\n        results.push(render(child, parent));\r\n      }\r\n      return results;\r\n    };\r\n    render = function(node, parent, scope) {\r\n      var attr, attrComponent, clone, component, element, i, j, len, myscopes, ref, ref1, ref2;\r\n      if (!node) {\r\n        return;\r\n      }\r\n      if (/SCRIPT|STYLE/.test(node.tagName)) {\r\n        return;\r\n      }\r\n      element = {\r\n        $node: node,\r\n        $parent: parent,\r\n        $children: [],\r\n        $scope: scope || (parent != null ? parent.$scope : void 0) || Scope(),\r\n        $html: node.innerHTML,\r\n        $textNodes: (ref = Array.from(node.childNodes)) != null ? ref.filter(function(child) {\r\n          return child.nodeType === document.TEXT_NODE;\r\n        }) : void 0,\r\n        $attributes: (ref1 = node.getAttributeNames()) != null ? ref1.map(function(name) {\r\n          return {\r\n            name: name,\r\n            value: node.getAttribute(name)\r\n          };\r\n        }) : void 0,\r\n        $render: true\r\n      };\r\n      ref2 = element.$attributes;\r\n      for (j = 0, len = ref2.length; j < len; j++) {\r\n        attr = ref2[j];\r\n        if (attrComponent = components[attr.name.toUpperCase()]) {\r\n          if (typeof attrComponent.pre === 'function') {\r\n            myscopes = attrComponent.pre(element.$scope, node, getProps(node, element.$scope));\r\n          }\r\n          if (myscopes && typeof myscopes === 'object' && typeof myscopes.length !== 'undefined') {\r\n            node.removeAttribute(attr.name);\r\n            i = myscopes.length;\r\n            while (i-- > 0) {\r\n              clone = node.cloneNode();\r\n              clone.innerHTML = node.innerHTML;\r\n              node.parentNode.insertBefore(clone, node.nextSibling);\r\n              render(clone, element, myscopes[i]);\r\n            }\r\n            node.parentNode.removeChild(node);\r\n            if (myscopes.length === 0) {\r\n              return;\r\n            }\r\n          }\r\n          node.setAttribute('checkattrs', true);\r\n        }\r\n      }\r\n      if (component = components[node.tagName.toUpperCase()]) {\r\n        element.$scope = Scope(element.$scope);\r\n        if (component.controller) {\r\n          component.controller(element.$scope, node, getProps(node, element.$scope.$parent));\r\n        }\r\n        element.$scope.$hash = hashObject(element.$scope);\r\n        node.innerHTML = component.template ? component.template : element.$html;\r\n        node.innerHTML = node.innerHTML.replace('<children></children>', element.$html);\r\n        element.$html = node.innerHTML;\r\n      } else {\r\n        //element.$html = node.innerHTML\r\n        node.innerHTML = element.$html;\r\n      }\r\n      //html = elem.innerHTML\r\n      if (parent) {\r\n        parent.$children.push(element);\r\n      }\r\n      renderChildren(node, element);\r\n      return element;\r\n    };\r\n    preRenderChildren = async function(elem, root, preElements) {\r\n      var child, children, j, k, len, len1, ref, results;\r\n      //return if /\\byma-router-parked\\b/.test elem.className\r\n      children = [];\r\n      ref = elem.children;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        child = ref[j];\r\n        children.push(child);\r\n      }\r\n      results = [];\r\n      for (k = 0, len1 = children.length; k < len1; k++) {\r\n        child = children[k];\r\n        results.push((await preRender(child, root, 0, preElements)));\r\n      }\r\n      return results;\r\n    };\r\n    preRender = async function(elem, root, index, preElements, hash) {\r\n      var attr, attrComponent, attributes, clone, component, html, i, id, j, len, myscopes, preId, realElem, ref, scope;\r\n      if (!elem) {\r\n        return;\r\n      }\r\n      id = makeId(elem, root);\r\n      preId = 'PREX:' + id;\r\n      html = elem.innerHTML;\r\n      attributes = {};\r\n      //get scope using id\r\n      realElem = elements.filter(function(myelem) {\r\n        return (myelem.id === id) || (myelem.id === preId);\r\n      })[index];\r\n      scope = scopes[realElem != null ? realElem.scope : void 0];\r\n      if (scope != null) {\r\n        scope.$phase = 'prerender';\r\n      }\r\n      if (!(realElem || scope) || (scope && hash && scope.$dataHash && scope.$dataHash !== hash)) {\r\n        preElements.push({\r\n          id: 'UNKNOWN@' + id\r\n        });\r\n        return;\r\n      }\r\n      ref = elem.getAttributeNames();\r\n      //get .pre scopes\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        attr = ref[j];\r\n        attributes[attr] = elem.getAttribute(attr);\r\n        if (attrComponent = components[attr.toUpperCase()]) {\r\n          if (typeof attrComponent.pre === 'function') {\r\n            myscopes = (await attrComponent.pre(scope, elem, getProps(elem)));\r\n          }\r\n          if (typeof myscopes !== 'undefined') {\r\n            if (myscopes) {\r\n              if (myscopes.length) {\r\n                i = myscopes.length;\r\n                while (i-- > 0) {\r\n                  myscopes[i].$parent.$children.splice(myscopes[i].$parent.$children.indexOf(myscopes[i], 1));\r\n                  clone = elem.cloneNode();\r\n                  clone.innerHTML = elem.innerHTML;\r\n                  clone.removeAttribute(attr);\r\n                  elem.parentNode.insertBefore(clone, elem.nextSibling);\r\n                  await preRender(clone, root, i, preElements, myscopes[i].$dataHash);\r\n                }\r\n                elem.parentNode.removeChild(elem);\r\n              } else {\r\n                if (myscopes.length === 0) {\r\n                  preElements.push({\r\n                    id: 'UNKNOWN@H1:H1@' + makeId(elem.parentNode, root)\r\n                  });\r\n                  elem.parentNode.removeChild(elem);\r\n                  return;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //  preRender pre stuff\r\n      //get component\r\n      if (component = components[elem.tagName]) {\r\n        elem.innerHTML = component.template ? component.template : html;\r\n        elem.innerHTML = elem.innerHTML.replace('<children></children>', html);\r\n      }\r\n      //render component\r\n      //push to preElements\r\n      preElements.push({\r\n        id: id\r\n      });\r\n      //preRenderChildren\r\n      return (await preRenderChildren(elem, root, preElements));\r\n    };\r\n    fillVars = function(element) {\r\n      var attr, child, j, k, l, len, len1, len2, node, ref, ref1, ref2, results;\r\n      ref = element.$attributes;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        attr = ref[j];\r\n        if (/\\{\\{/.test(attr.value)) {\r\n          element.$node.setAttribute(attr.name, fillTemplate(attr.value, element.$scope));\r\n        }\r\n      }\r\n      ref1 = element.$node.childNodes;\r\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\r\n        node = ref1[k];\r\n        if (node.nodeType === document.TEXT_NODE && /\\{\\{/.test(node.data)) {\r\n          node.replaceWith(fillTemplate(node.data, element.$scope));\r\n        }\r\n      }\r\n      ref2 = element.$children;\r\n      results = [];\r\n      for (l = 0, len2 = ref2.length; l < len2; l++) {\r\n        child = ref2[l];\r\n        results.push(fillVars(child));\r\n      }\r\n      return results;\r\n    };\r\n    checkAttrs = function(element) {\r\n      var attr, attrComponent, attrFn, child, j, k, len, len1, ref, ref1, results;\r\n      if (element.$node.getAttribute('checkattrs')) {\r\n        element.$node.removeAttribute('checkattrs');\r\n        ref = element.$attributes;\r\n        for (j = 0, len = ref.length; j < len; j++) {\r\n          attr = ref[j];\r\n          if (attrComponent = components[attr.name.toUpperCase()]) {\r\n            attrFn = attrComponent.post || attrComponent;\r\n            if (typeof attrFn === 'function') {\r\n              attrFn(element.$scope, element.$node, getProps(element.$node, element.$scope));\r\n            }\r\n            element.$node.removeAttribute(attr.name);\r\n          }\r\n        }\r\n      }\r\n      ref1 = element.$children;\r\n      results = [];\r\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\r\n        child = ref1[k];\r\n        results.push(checkAttrs(child));\r\n      }\r\n      return results;\r\n    };\r\n    getService = function(name) {\r\n      var component, service;\r\n      if (service = services[name]) {\r\n        return service;\r\n      } else if (component = components[name.toUpperCase()]) {\r\n        services[name] = {\r\n          fn: (component.service || component)(),\r\n          scopes: []\r\n        };\r\n        return services[name];\r\n      }\r\n      return null;\r\n    };\r\n    return {\r\n      appName: appName,\r\n      render: async function(elem, scope) {\r\n        if (!bootstrapped) {\r\n          await callbacks.$call('bootstrap');\r\n          bootstrapped = true;\r\n        }\r\n        elem = elem || document.querySelector('[app=' + appName + ']');\r\n        rootElem = render(elem);\r\n        fillVars(rootElem);\r\n        checkAttrs(rootElem);\r\n        callbacks.$call('rendered');\r\n        return this;\r\n      },\r\n      $renderChildren: async function(elem, scope) {\r\n        await renderChildren(elem, scope);\r\n        await fillVars();\r\n        await checkAttrs();\r\n        return callbacks.$call('renderedChildren');\r\n      },\r\n      component: function(nameOrObj, fn) {\r\n        var name;\r\n        if (typeof nameOrObj === 'object') {\r\n          for (name in nameOrObj) {\r\n            fn = nameOrObj[name];\r\n            components[name.toUpperCase()] = fn(this);\r\n            this.$appendStyles(components[name.toUpperCase()].styles);\r\n          }\r\n        } else {\r\n          components[nameOrObj.toUpperCase()] = fn(this);\r\n          this.$appendStyles(components[nameOrObj.toUpperCase()].styles);\r\n        }\r\n        return this;\r\n      },\r\n      Scope: Scope,\r\n      Callbacks: Callbacks,\r\n      $version: __webpack_require__(/*! ../package.json */ \"./node_modules/yma/package.json\").version,\r\n      $getComponents: function() {\r\n        return components;\r\n      },\r\n      $getElements: function() {\r\n        return rootElem;\r\n      },\r\n      $getServices: function() {\r\n        return services;\r\n      },\r\n      $getScopes: function() {\r\n        return scopes;\r\n      },\r\n      $eval: evalInContext,\r\n      $offset: offset,\r\n      $setScopeVar: setScopeVar,\r\n      $getScopeVar: getScopeVar,\r\n      $getElement: getElement,\r\n      $getProps: getProps,\r\n      $teardown: teardown,\r\n      $teardownChildren: teardownChildren,\r\n      $on: callbacks.$on,\r\n      $once: callbacks.$once,\r\n      $off: callbacks.$off,\r\n      $hash: hash,\r\n      $hashObject: hashObject,\r\n      $makeId: makeId,\r\n      $addClass: function(elem, classNames) {\r\n        var className, j, len;\r\n        if (typeof classNames === 'string') {\r\n          classNames = [classNames];\r\n        }\r\n        for (j = 0, len = classNames.length; j < len; j++) {\r\n          className = classNames[j];\r\n          this.$removeClass(elem, className);\r\n          elem.className += ' ' + className;\r\n        }\r\n        return null;\r\n      },\r\n      $removeClass: function(elem, classNames) {\r\n        var className, j, len, r;\r\n        if (typeof classNames === 'string') {\r\n          classNames = [classNames];\r\n        }\r\n        for (j = 0, len = classNames.length; j < len; j++) {\r\n          className = classNames[j];\r\n          r = new RegExp('\\\\s*\\\\b' + className + '\\\\b', 'g');\r\n          elem.className = elem.className.replace(r, '');\r\n        }\r\n        return null;\r\n      },\r\n      $update: function(serviceName) {\r\n        var service;\r\n        if (service = getService(serviceName)) {\r\n          return updateScopes(service.scopes);\r\n        }\r\n      },\r\n      $appendStyles: function(stylesText) {\r\n        var styles;\r\n        if (!stylesText) {\r\n          return;\r\n        }\r\n        styles = document.createElement('style');\r\n        styles.innerText = stylesText.replace(/\\n/gi, '');\r\n        return document.querySelector('head').append(styles);\r\n      },\r\n      $internal: {\r\n        components: components,\r\n        scopes: scopes,\r\n        services: services,\r\n        callbacks: callbacks,\r\n        fillTemplate: fillTemplate,\r\n        mergeScopes: mergeScopes,\r\n        cleanupScopes: cleanupScopes,\r\n        updateScopes: updateScopes,\r\n        scopeVar: scopeVar,\r\n        getScopeVarRoot: getScopeVarRoot,\r\n        getService: getService\r\n      }\r\n    };\r\n  };\r\n\r\n  module.exports = Yma;\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=index.js.map\r\n\n\n//# sourceURL=webpack:///./node_modules/yma/dist/index.js?");

/***/ }),

/***/ "./node_modules/yma/package.json":
/*!***************************************!*\
  !*** ./node_modules/yma/package.json ***!
  \***************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _spec, _where, author, bugs, bundleDependencies, dependencies, deprecated, description, devDependencies, homepage, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"_from\\\":\\\"git+https://github.com/ndxbxrme/yma.git\\\",\\\"_id\\\":\\\"yma@0.0.42\\\",\\\"_inBundle\\\":false,\\\"_integrity\\\":\\\"\\\",\\\"_location\\\":\\\"/yma\\\",\\\"_phantomChildren\\\":{},\\\"_requested\\\":{\\\"type\\\":\\\"git\\\",\\\"raw\\\":\\\"git+https://github.com/ndxbxrme/yma.git\\\",\\\"rawSpec\\\":\\\"git+https://github.com/ndxbxrme/yma.git\\\",\\\"saveSpec\\\":\\\"git+https://github.com/ndxbxrme/yma.git\\\",\\\"fetchSpec\\\":\\\"https://github.com/ndxbxrme/yma.git\\\",\\\"gitCommittish\\\":null},\\\"_requiredBy\\\":[\\\"#USER\\\",\\\"/\\\"],\\\"_resolved\\\":\\\"git+https://github.com/ndxbxrme/yma.git#99c454063b724a823eb45cf6e342eacea4968c0c\\\",\\\"_spec\\\":\\\"git+https://github.com/ndxbxrme/yma.git\\\",\\\"_where\\\":\\\"C:\\\\\\\\Users\\\\\\\\lewis\\\\\\\\DEV\\\\\\\\yma-full\\\",\\\"author\\\":{\\\"name\\\":\\\"ndxbxrme\\\"},\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ndxbxrme/yma/issues\\\"},\\\"bundleDependencies\\\":false,\\\"dependencies\\\":{},\\\"deprecated\\\":false,\\\"description\\\":\\\"a lightweight frontend framework\\\",\\\"devDependencies\\\":{\\\"local-web-server\\\":\\\"^4.0.0\\\",\\\"puppeteer\\\":\\\"^2.1.1\\\",\\\"webpack\\\":\\\"^4.41.6\\\",\\\"webpack-cli\\\":\\\"^3.3.11\\\",\\\"webpack-dev-server\\\":\\\"^3.10.3\\\"},\\\"homepage\\\":\\\"https://github.com/ndxbxrme/yma\\\",\\\"license\\\":\\\"MIT\\\",\\\"main\\\":\\\"dist/index.js\\\",\\\"name\\\":\\\"yma\\\",\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git+https://github.com/ndxbxrme/yma.git\\\"},\\\"scripts\\\":{\\\"build\\\":\\\"coffee -m -o dist -c src\\\",\\\"build-tests\\\":\\\"coffee -o test -c test && pug test && cd test && for /d %i in (*) do @cd %i && npx webpack --mode development && cd ..\\\",\\\"full-test\\\":\\\"npm run build && npm run build-tests && nodeunit test/test.js\\\",\\\"test\\\":\\\"nodeunit test/test.js\\\",\\\"watch\\\":\\\"coffee -mw -o dist -c src\\\"},\\\"version\\\":\\\"0.0.42\\\"}\");\n\n//# sourceURL=webpack:///./node_modules/yma/package.json?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 2.5.1\n(function() {\n  window.Yma = __webpack_require__(/*! yma */ \"./node_modules/yma/dist/index.js\");\n\n  window.ymaCore = __webpack_require__(/*! yma-core */ \"./node_modules/yma-core/dist/index.js\");\n\n}).call(this);\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });